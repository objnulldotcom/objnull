@using MVCWeb;
@using MVCWeb.Model.Models;
@using System.Text.RegularExpressions;
@{
    Layout = null;
    List<Blog> BlogList = ViewBag.BlogList as List<Blog>;
}

@foreach (Blog blog in BlogList)
{
    <div class="media">
        <div class="media-left">
            <div style="height: 35px;padding-top: 2px;text-align: center;">
                @switch (blog.Type)
                {
                    case (int)EnumBlogType.姿势:
                        <span class="label label-primary" style="font-weight: 400">姿势</span>
                        break;
                    case (int)EnumBlogType.宣传:
                        <span class="label label-danger" style="font-weight: 400">宣传</span>
                        break;
                    case (int)EnumBlogType.心得:
                        <span class="label label-info" style="font-weight: 400">心得</span>
                        break;
                    case (int)EnumBlogType.科普:
                        <span class="label label-success" style="font-weight: 400">科普</span>
                        break;
                    case (int)EnumBlogType.搬运:
                        <span class="label label-warning" style="font-weight: 400">搬运</span>
                        break;
                }
            </div>
            <a href="@Url.Action("UserProfile", "Home", new { id = blog.Owner.ID })" target="_blank"><img class="img-rounded" src="@blog.Owner.AvatarUrl&s=48" height="48" width="48" alt="@blog.Owner.Name" title="@blog.Owner.Name"></a>
        </div>
        <div class="media-body">
            <div class="media-heading fs1"><a href="@Url.Action("BlogView", "Home", new { id = blog.ID })" target="_blank" style="text-decoration:none">@blog.Title</a></div>
            @{
                //提取内容预览
                Regex img = new Regex("<img.+?>\n*");
                blog.MDValue = img.Replace(blog.MDValue, "");
                Regex link = new Regex("<a.+?</a>*");
                blog.MDValue = link.Replace(blog.MDValue, "");
                blog.MDValue = blog.MDValue.Replace("<br>", " ").Replace("<strong>", "").Replace("</strong>", "").Replace("<em>", "").Replace("</em>", "");
                blog.MDValue = blog.MDValue.Replace("<del>", "").Replace("</del>", "").Replace("<code>", "").Replace("</code>", "").Replace("\n", " ");
                Regex reg = new Regex("<p>.+?</p>");
                MatchCollection mc = reg.Matches(blog.MDValue);
                string result = "";
                for (int i = 0; i < mc.Count; i++)
                {
                    string ptxt = mc[i].Value.Replace("<p>", "").Replace("</p>", "");
                    result += ptxt + " ";
                    if (System.Text.Encoding.Default.GetByteCount(result) > 380)
                    {
                        result = result.Substring(0, 200);
                        break;
                    }
                }
                result = result.TrimEnd() + "……";
            }
            <div class="fs2" style="height: 35px; overflow: hidden">@Html.Raw("<p>" + result + "</p>")</div>
            <div class="fs2" style="padding-top:2px">
                <a href="@Url.Action("UserProfile", "Home", new { id = blog.Owner.ID })" target="_blank">@(string.IsNullOrEmpty(blog.Owner.Name) ? blog.Owner.GitHubLogin : blog.Owner.Name)</a> post at&nbsp;
                <span class="glyphicon glyphicon-time"></span>@blog.InsertDate.ToString("yyyy-MM-dd HH:mm")&nbsp;
                <span class="glyphicon glyphicon-eye-open"></span>@blog.ViewCount&nbsp;
                <span class="glyphicon glyphicon-comment"></span>@blog.CommentCount&nbsp;
                <span class="glyphicon glyphicon-thumbs-up"></span>@blog.ProCount
            </div>
        </div>
    </div>
}
<input type="hidden" id="TotalCount" value="@ViewBag.TotalCount" />
<input type="hidden" id="CurrentPage" value="@ViewBag.CurrentPage" />
